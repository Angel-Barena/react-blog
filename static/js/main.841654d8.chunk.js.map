{"version":3,"sources":["actions/index.js","reducers/reducer_posts.js","reducers/index.js","components/posts_index.js","components/posts_new.js","components/posts_show.js","index.js"],"names":["FETCH_POSTS","FETCH_POST","CREATE_POST","DELETE_POST","ROOT_URL","API_KEY","rootReducer","combineReducers","posts","state","arguments","length","undefined","action","type","_","omit","payload","Object","objectSpread","defineProperty","data","id","mapKeys","form","formReducer","PostsIndex","this","props","fetchPosts","map","post","react_default","a","createElement","className","key","Link","to","concat","title","renderPosts","Component","connect","request","axios","get","PostsNew","field","_field$meta","meta","touched","error","label","assign","input","values","_this","createPost","history","push","handleSubmit","onSubmit","bind","Field","name","component","renderField","reduxForm","validate","errors","categories","content","callback","then","PostsShow","match","params","fetchPost","deletePost","onClick","onDeleteClick","_ref","ownProps","delete","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","es","store","reducers","BrowserRouter","Switch","Route","path","document","querySelector"],"mappings":"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","file":"static/js/main.841654d8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const FETCH_POSTS = \"fetch_posts\";\r\nexport const FETCH_POST = \"fetch_post\";\r\nexport const CREATE_POST = \"create_post\";\r\nexport const DELETE_POST = \"delete_post\";  \r\n\r\nconst ROOT_URL = \"http://reduxblog.herokuapp.com/api\";\r\nconst API_KEY = \"?key=AJW3EWORMKF\";\r\n\r\nexport function fetchPosts(){\r\n    const request = axios.get(`${ROOT_URL}/posts${API_KEY}`);\r\n\r\n    return {\r\n        type: FETCH_POSTS,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function createPost(values, callback){\r\n    const request = axios.post(`${ROOT_URL}/posts${API_KEY}`, values)\r\n    .then(()=>callback());\r\n\r\n    return {\r\n        type: CREATE_POST,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function fetchPost(id){\r\n    const request = axios.get(`${ROOT_URL}/posts/${id}${API_KEY}`);\r\n    return {\r\n        type: FETCH_POST,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deletePost(id, callback){\r\n    const request = axios.delete(`${ROOT_URL}/posts/${id}${API_KEY}`)\r\n    .then(()=>callback());\r\n    return {\r\n        type: DELETE_POST,\r\n        payload: id\r\n    }\r\n}","import _ from 'lodash';\r\n\r\nimport {FETCH_POSTS, FETCH_POST, DELETE_POST} from \"../actions/index\";\r\n\r\n\r\nexport default function(state={}, action){\r\n    switch(action.type){\r\n        case DELETE_POST:\r\n        return _.omit(state, action.payload)\r\n        case FETCH_POST:\r\n            // const post = action.payload.data;\r\n            // const newState = {...state};\r\n            // newState[post.id] = post;\r\n            // return {...state, newState};\r\n            return {...state, [action.payload.data.id]:action.payload.data}\r\n        case FETCH_POSTS:\r\n            return _.mapKeys(action.payload.data, \"id\");\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport PostsReducer from './reducer_posts';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: PostsReducer,\r\n    form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import _ from 'lodash';\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchPosts} from '../actions';\r\n\r\nclass PostsIndex extends  Component {\r\n    componentDidMount(){\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    renderPosts(){\r\n        return _.map(this.props.posts, post=>{\r\n            return (\r\n                <li className=\"list-group-item\" key={post.id}>\r\n                    <Link to={`/posts/${post.id}`}>\r\n                        {post.title}\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"m-3\">\r\n                <h3>Posts</h3>\r\n                <div className=\"mb-2 mt-2\">\r\n                    <Link className=\"btn btn-primary\" to=\"/posts/new\">\r\n                        Add a Post\r\n                    </Link>\r\n                </div>\r\n                <ul className=\"list-group\">\r\n                    {this.renderPosts()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {posts: state.posts};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPosts})(PostsIndex);","import React, {Component} from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createPost} from '../actions';\r\n\r\nclass PostsNew extends Component {\r\n\r\n    renderField(field) {\r\n\r\n        const {meta: {touched, error}} = field;\r\n\r\n        const className = `form-group ${touched && error ? 'has-danger' : ''}`;\r\n\r\n        return(\r\n            <div className={className}>\r\n                <label>{field.label}</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\" \r\n                    {...field.input}\r\n                />\r\n                <div className=\"text-help\">\r\n                    {touched ? error : ''}\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit(values) {\r\n        this.props.createPost(values, ()=>{\r\n            this.props.history.push('/');\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {handleSubmit} = this.props;\r\n\r\n        return(\r\n            <form className=\"m-3\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                <Field \r\n                    label=\"Title for Post\"\r\n                    name=\"title\"\r\n                    component={this.renderField}\r\n                />\r\n                <Field\r\n                    label=\"Categories\" \r\n                    name=\"categories\"\r\n                    component={this.renderField}\r\n                />\r\n                <Field\r\n                    label=\"Post content\" \r\n                    name=\"content\"\r\n                    component={this.renderField}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\r\n                <Link to=\"/\" className=\"btn btn-danger\">Cancel</Link>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n\r\n\r\n    //Validate the inputs from 'values'\r\n\r\n    if(!values.title) {\r\n        errors.title = \"Enter a title\";\r\n    }\r\n\r\n    if(!values.categories) {\r\n        errors.categories = \"Enter some categories\";\r\n    }\r\n\r\n    if(!values.content) {\r\n        errors.content = \"Enter some content please\";\r\n    }\r\n\r\n    //if errors is empty, form is fine to submit\r\n    //if errors has any properties, redux form assumes form is invalid\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'PostsNewForm'\r\n})(\r\n    connect(null, {createPost})(PostsNew)\r\n);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPost, deletePost} from '../actions';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass PostsShow extends Component {\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        this.props.fetchPost(id);\r\n    }\r\n\r\n    onDeleteClick(){\r\n        const {id} = this.props.match.params;\r\n        this.props.deletePost(id, ()=>{\r\n            this.props.history.push('/');\r\n        }); \r\n    }\r\n\r\n    render() {\r\n        const {post} =  this.props;\r\n\r\n        if(!post) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div className=\"m-3\">\r\n                <Link to=\"/\">Back To Index</Link>\r\n                <button \r\n                    className=\"btn btn-danger ml-5\"\r\n                    onClick={this.onDeleteClick.bind(this)}\r\n                >\r\n                Delete Post\r\n                </button>\r\n                <h1 className=\"mt-3\">{post.title}</h1>\r\n                <h6>Categories: {post.categories}</h6>\r\n                <p>{post.content}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({posts}, ownProps){\r\n    return {post: posts[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPost, deletePost})(PostsShow);","import 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport promise from 'redux-promise'\r\n\r\nimport reducers from './reducers';\r\nimport PostsIndex from './components/posts_index';\r\nimport PostsNew from './components/posts_new';\r\nimport PostsShow from './components/posts_show';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider store={createStoreWithMiddleware(reducers)}>\r\n    <BrowserRouter>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Switch>\r\n          <Route path=\"/posts/new\" component={PostsNew}/>\r\n          <Route path=\"/posts/:id\" component={PostsShow}/>\r\n          <Route path=\"/\" component={PostsIndex}/>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  </Provider>\r\n  , document.querySelector('#root'));\r\n"],"sourceRoot":""}